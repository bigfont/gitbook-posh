
Sentence Outline
-----

# Install Git on Windows

# The verbs: what each does, its use case(s), how exactly to use it with common options, and a bit of the plumbing.

## add

What: Add file contents to the index

When: After making changes to files in your working directory, you want to prepare to commit them.

How:
-----
git add -A
git add <pathspec>
-----

## bisect (todo)

What: Find by binary search the change that introduced a bug.

When:

How:
-----
-----

## branch

What: List, create, or delete branches.

When: You want to start on a line of work without polluting the existing branch.

How: list, create, delete
-----
git branch
git branch <new_branch>
git branch -d <branch>
-----

## checkout

What: Checkout a branch or paths to the working tree

When: You want to switch to a specific branch, you want to look at a previous commit.

How:
-----
git checkout <SHA1>
git checkout <branch>
git checkout -b <new_branch>
-----

Important Details:
1. points HEAD at the specified branch (or commit)
1. populates the index with that commit's snapshot
** and keeps in the index any *new* files that the current branch put in the index
1. copies the contents of the index into the working dir
** but warns you if that will overwrite any uncommitted working tree modifications

# Create a local repo

# The most basic Git workflow

# Push a local repo to a remote

# Clone an existing repo

# Branching and merging

# Basic rebase and commit etiquette

# Authentication with HTTPs and SSL

# Remove massive/private files with filter-branch

# Use GitIgnore

# Enlist in an existing repo (deprecated)

# Contribute to an existing repo (deprecated)
