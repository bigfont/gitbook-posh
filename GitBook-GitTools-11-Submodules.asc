
[NOTE]
=====
- Schedule Estimate, 5 hours
- Schedule Actual, ... hours
=====

# Submodules

- Use one or more projects from within another project,
- while keeping the commits seperate. E.g.
** use and contrib to a third partly library
** develop a project that's shared among parents
- Treat parent and child as separate repos,
- while also using them together.

[NOTE]
=====
Submodules help us to avoid code entanglement.
=====

# Starting with Submodules

- main project and sub projects

-----
git submodule add <uri> [dir-name]
git diff submoduleDir
git diff --submodule
-----
- add a submodule to an existing repo
- the submodule dir will have the repo name
- submodule mapping goes into `.gitmodules`
** stores <url> directory mappings
** is version controlled like other files
** has a line for each submodule
** for a public project, use a public url
- git only tracks a submodule when we're in its dir
- from the parent, git tracks it as a dir
** not as a subdir
** nor as a file

# Cloning a Project with Submodules

# Working on a Project with Submodules

## Pulling in Upstream Changes

## Working on a Submodule

## Publishing Submodule Changes

## Merging Submodule Changes

# Submodule Tips

## Submodule Foreach

## Useful Aliases

# Issues with Submodules
